trigger:
  branches:
    include:
      - main

variables:
  terraformVersion: '1.6.6'
  azureServiceConnection: '6f0f938c-0599-4b69-9b56-09468ec24549'
  environment: 'dev'

stages:
- stage: Terraform_Deploy
  displayName: 'Terraform Deployment'
  jobs:
  - job: Terraform
    displayName: 'Terraform Init, Plan and Apply'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self

    - task: AzureCLI@2
      inputs:
        azureSubscription: '$(azureServiceConnection)'
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Logged into Azure."

    - task: Bash@3
      displayName: 'Install Terraform'
      inputs:
        targetType: 'inline'
        script: |
          curl -sLo terraform.zip https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

    - script: |
        terraform init -backend-config="key=$(environment).tfstate"
      displayName: 'Terraform Init'

    - script: |
        terraform validate
      displayName: 'Terraform Validate'

    - script: |
        terraform plan -out=tfplan -input=false
      displayName: 'Terraform Plan'

    # Optional: Remove this or implement environment-based approvals instead
    # - task: ManualValidation@0
    #   displayName: 'Manual Approval'
    #   inputs:
    #     instructions: 'Approve to apply Terraform changes in $(environment)'
    #     onTimeout: 'reject'
    #     timeout: '1d'

    - script: |
        terraform apply tfplan
      displayName: 'Terraform Apply'
