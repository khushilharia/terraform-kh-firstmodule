trigger:
  branches:
    include:
      - main  # Change as needed

variables:
  terraformVersion: '1.6.6'
  azureServiceConnection: 'Pay-as-you-go-sc'  # <-- Your service connection name
  environment: 'dev'
  tfStateKey: 'terraform-$(environment).tfstate'

stages:
- stage: DeployTerraform
  displayName: 'Terraform Deployment to Azure'
  jobs:
  - job: Terraform
    displayName: 'Run Terraform'
    pool:
      vmImage: 'ubuntu-latest'

    steps:
    - checkout: self

    # Optional: Install specific Terraform version manually
    - task: Bash@3
      displayName: 'Install Terraform'
      inputs:
        targetType: 'inline'
        script: |
          curl -sLo terraform.zip https://releases.hashicorp.com/terraform/$(terraformVersion)/terraform_$(terraformVersion)_linux_amd64.zip
          unzip terraform.zip
          sudo mv terraform /usr/local/bin/
          terraform -version

    # Azure Login using AzureCLI task
    - task: AzureCLI@2
      name: AzureLogin
      inputs:
        azureSubscription: $(azureServiceConnection)
        scriptType: bash
        scriptLocation: inlineScript
        inlineScript: |
          echo "Logged in to Azure. Setting Terraform environment variables..."

          export ARM_CLIENT_ID=$servicePrincipalId
          export ARM_CLIENT_SECRET=$servicePrincipalKey
          export ARM_SUBSCRIPTION_ID=$subscriptionId
          export ARM_TENANT_ID=$tenantId

          echo "Environment variables set for Terraform."

          # Optional: Validate auth
          az account show

          # Init Terraform with remote state /* -backend-config="key=$(tfStateKey)" */
          terraform init 

          # Validate and Plan
          terraform validate
          terraform plan

          # Apply changes
          terraform apply -auto-approve
